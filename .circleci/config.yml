version: 2
jobs:
  build_node10:
    docker:
      - image: circleci/node:10

    working_directory: ~/middy

    steps:
      - checkout

      - attach_workspace:
          at: ~/

      - run:
          name: unit tests
          command: npm run test:packages:unit

  build_node12:
    docker:
      - image: circleci/node:12

    working_directory: ~/middy

    steps:
      - checkout

      - attach_workspace:
          at: ~/

      - run:
          name: unit tests
          command: npm run test:packages:unit

  lint:
    docker:
      - image: circleci/node:10

    working_directory: ~/middy

    steps:
      - checkout

      - restore_cache:
          keys:
          - node10-deps-v1-{{ checksum "package.json" }}
          - node10-deps-v1-

      - run:
          name: npm install
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: node10-deps-v1-{{ checksum "package.json" }}

      - run:
          name: lint code
          command: npm run test:lint:ci

      - run:
          name: test typings
          command: npm run test:packages:typings

      - persist_to_workspace:
          root: ~/
          paths:
            - middy
            - node_modules

  deploy:
    docker:
      - image: circleci/node:6.10

    steps:
        - attach_workspace:
            at: ~/

        - run:
            name: configure NPM registry
            command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

        - run:
            name: configure GitHub SSH
            command: mkdir -p ~/.ssh && ssh-keyscan -H github.com > ~/.ssh/known_hosts

        - run:
            working_directory: ~/middy
            name: publish
            command: |
              npm run lerna:publish && npm run release:tag;

workflows:
  version: 2

  build_test_deploy:
    jobs:
        - lint
        - build_node10:
            requires:
              - lint
        - build_node12:
            requires:
              - lint

        # we only deploy if build_node6, build_node8 & build_node10 succeed and if on master
        - deploy:
            requires:
                - build_node10
                - build_node12
            filters:
                branches:
                    only: 1.0.0-alpha
